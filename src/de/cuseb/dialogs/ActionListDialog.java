/*  
 * Copyright 2012 Jan Mönnich
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.cuseb.dialogs;

import de.cuseb.MainFrame;
import javax.swing.ImageIcon;

public class ActionListDialog extends javax.swing.JDialog {

    private boolean canceled;
    private MainFrame mainFrame;
    private ImageIcon iconListeHochformat;
    private ImageIcon iconListeQuerformat;
    private ImageIcon iconKatalogHochformat;
    private ImageIcon iconKatalogQuerformat;

    public ActionListDialog(MainFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        canceled = true;
        iconListeHochformat = new ImageIcon(getClass().getResource(
                "/de/cuseb/images/liste_hochformat.png"));
        iconListeQuerformat = new ImageIcon(getClass().getResource(
                "/de/cuseb/images/liste_querformat.png"));
        iconKatalogHochformat = new ImageIcon(getClass().getResource(
                "/de/cuseb/images/katalog_hochformat.png"));
        iconKatalogQuerformat = new ImageIcon(getClass().getResource(
                "/de/cuseb/images/katalog_querformat.png"));
        updateSample();
        this.mainFrame = parent;
        comboSelektion.setEnabled(
                mainFrame.getTable().getSelectedRowCount() > 0);
    }

    public String getFormat() {
        return comboFormat.getSelectedItem().toString();
    }

    public String getAusrichtung() {
        return comboAusrichtung.getSelectedItem().toString();
    }

    public String getSelektion() {
        return comboSelektion.getSelectedItem().toString();
    }

    public boolean isCanceled() {
        return canceled;
    }

    public final void updateSample() {
        if (getFormat().equals("Liste")) {
            if (getAusrichtung().equals("Hochformat")) {
                labelBeispielImage.setIcon(iconListeHochformat);
            } else {
                labelBeispielImage.setIcon(iconListeQuerformat);
            }
        } else {
            if (getAusrichtung().equals("Hochformat")) {
                labelBeispielImage.setIcon(iconKatalogHochformat);
            } else {
                labelBeispielImage.setIcon(iconKatalogQuerformat);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelFormat = new javax.swing.JLabel();
        comboFormat = new javax.swing.JComboBox();
        labelBeispiel = new javax.swing.JLabel();
        labelSelektion = new javax.swing.JLabel();
        labelAusrichtung = new javax.swing.JLabel();
        panelButtons = new javax.swing.JPanel();
        buttonView = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        comboAusrichtung = new javax.swing.JComboBox();
        comboSelektion = new javax.swing.JComboBox();
        labelBeispielImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Liste anzeigen/drucken");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        labelFormat.setText("Format");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 2, 5);
        getContentPane().add(labelFormat, gridBagConstraints);

        comboFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Liste", "Katalog" }));
        comboFormat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormatItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 2, 10);
        getContentPane().add(comboFormat, gridBagConstraints);

        labelBeispiel.setText("Beispiel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
        getContentPane().add(labelBeispiel, gridBagConstraints);

        labelSelektion.setText("Selektion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
        getContentPane().add(labelSelektion, gridBagConstraints);

        labelAusrichtung.setText("Ausrichtung");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
        getContentPane().add(labelAusrichtung, gridBagConstraints);

        panelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonView.setText("Anzeigen");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });
        panelButtons.add(buttonView);

        buttonCancel.setText("Abbrechen");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        panelButtons.add(buttonCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(panelButtons, gridBagConstraints);

        comboAusrichtung.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Querformat", "Hochformat" }));
        comboAusrichtung.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAusrichtungItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 10);
        getContentPane().add(comboAusrichtung, gridBagConstraints);

        comboSelektion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alle Bücher", "Selektierte Bücher" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 10);
        getContentPane().add(comboSelektion, gridBagConstraints);

        labelBeispielImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelBeispielImage.setPreferredSize(new java.awt.Dimension(250, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 15);
        getContentPane().add(labelBeispielImage, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        canceled = false;
        dispose();
    }//GEN-LAST:event_buttonViewActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        canceled = true;
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void comboFormatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormatItemStateChanged
        updateSample();
    }//GEN-LAST:event_comboFormatItemStateChanged

    private void comboAusrichtungItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAusrichtungItemStateChanged
        updateSample();
    }//GEN-LAST:event_comboAusrichtungItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonView;
    private javax.swing.JComboBox comboAusrichtung;
    private javax.swing.JComboBox comboFormat;
    private javax.swing.JComboBox comboSelektion;
    private javax.swing.JLabel labelAusrichtung;
    private javax.swing.JLabel labelBeispiel;
    private javax.swing.JLabel labelBeispielImage;
    private javax.swing.JLabel labelFormat;
    private javax.swing.JLabel labelSelektion;
    private javax.swing.JPanel panelButtons;
    // End of variables declaration//GEN-END:variables
}
